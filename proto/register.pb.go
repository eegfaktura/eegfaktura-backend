// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: proto/register.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterEegRequest_EEG_LEGAL int32

const (
	RegisterEegRequest_VEREIN         RegisterEegRequest_EEG_LEGAL = 0
	RegisterEegRequest_GENOSSENSCHAFT RegisterEegRequest_EEG_LEGAL = 1
	RegisterEegRequest_GESELLSCHAFT   RegisterEegRequest_EEG_LEGAL = 2
)

// Enum value maps for RegisterEegRequest_EEG_LEGAL.
var (
	RegisterEegRequest_EEG_LEGAL_name = map[int32]string{
		0: "VEREIN",
		1: "GENOSSENSCHAFT",
		2: "GESELLSCHAFT",
	}
	RegisterEegRequest_EEG_LEGAL_value = map[string]int32{
		"VEREIN":         0,
		"GENOSSENSCHAFT": 1,
		"GESELLSCHAFT":   2,
	}
)

func (x RegisterEegRequest_EEG_LEGAL) Enum() *RegisterEegRequest_EEG_LEGAL {
	p := new(RegisterEegRequest_EEG_LEGAL)
	*p = x
	return p
}

func (x RegisterEegRequest_EEG_LEGAL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterEegRequest_EEG_LEGAL) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_register_proto_enumTypes[0].Descriptor()
}

func (RegisterEegRequest_EEG_LEGAL) Type() protoreflect.EnumType {
	return &file_proto_register_proto_enumTypes[0]
}

func (x RegisterEegRequest_EEG_LEGAL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterEegRequest_EEG_LEGAL.Descriptor instead.
func (RegisterEegRequest_EEG_LEGAL) EnumDescriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{2, 0}
}

type RegisterEegRequest_EEG_SETTELMENT int32

const (
	RegisterEegRequest_ANNUAL   RegisterEegRequest_EEG_SETTELMENT = 0
	RegisterEegRequest_BIANNUAL RegisterEegRequest_EEG_SETTELMENT = 1
	RegisterEegRequest_QUARTER  RegisterEegRequest_EEG_SETTELMENT = 2
	RegisterEegRequest_MONTHLY  RegisterEegRequest_EEG_SETTELMENT = 3
)

// Enum value maps for RegisterEegRequest_EEG_SETTELMENT.
var (
	RegisterEegRequest_EEG_SETTELMENT_name = map[int32]string{
		0: "ANNUAL",
		1: "BIANNUAL",
		2: "QUARTER",
		3: "MONTHLY",
	}
	RegisterEegRequest_EEG_SETTELMENT_value = map[string]int32{
		"ANNUAL":   0,
		"BIANNUAL": 1,
		"QUARTER":  2,
		"MONTHLY":  3,
	}
)

func (x RegisterEegRequest_EEG_SETTELMENT) Enum() *RegisterEegRequest_EEG_SETTELMENT {
	p := new(RegisterEegRequest_EEG_SETTELMENT)
	*p = x
	return p
}

func (x RegisterEegRequest_EEG_SETTELMENT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterEegRequest_EEG_SETTELMENT) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_register_proto_enumTypes[1].Descriptor()
}

func (RegisterEegRequest_EEG_SETTELMENT) Type() protoreflect.EnumType {
	return &file_proto_register_proto_enumTypes[1]
}

func (x RegisterEegRequest_EEG_SETTELMENT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterEegRequest_EEG_SETTELMENT.Descriptor instead.
func (RegisterEegRequest_EEG_SETTELMENT) EnumDescriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{2, 1}
}

type RegisterEegRequest_GRID_AREA int32

const (
	RegisterEegRequest_REGIONAL RegisterEegRequest_GRID_AREA = 0
	RegisterEegRequest_LOCAL    RegisterEegRequest_GRID_AREA = 1
)

// Enum value maps for RegisterEegRequest_GRID_AREA.
var (
	RegisterEegRequest_GRID_AREA_name = map[int32]string{
		0: "REGIONAL",
		1: "LOCAL",
	}
	RegisterEegRequest_GRID_AREA_value = map[string]int32{
		"REGIONAL": 0,
		"LOCAL":    1,
	}
)

func (x RegisterEegRequest_GRID_AREA) Enum() *RegisterEegRequest_GRID_AREA {
	p := new(RegisterEegRequest_GRID_AREA)
	*p = x
	return p
}

func (x RegisterEegRequest_GRID_AREA) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterEegRequest_GRID_AREA) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_register_proto_enumTypes[2].Descriptor()
}

func (RegisterEegRequest_GRID_AREA) Type() protoreflect.EnumType {
	return &file_proto_register_proto_enumTypes[2]
}

func (x RegisterEegRequest_GRID_AREA) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterEegRequest_GRID_AREA.Descriptor instead.
func (RegisterEegRequest_GRID_AREA) EnumDescriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{2, 2}
}

type RegisterEegRequest_GRID_ALLOCATION int32

const (
	RegisterEegRequest_DYNAMIC RegisterEegRequest_GRID_ALLOCATION = 0
	RegisterEegRequest_STATIC  RegisterEegRequest_GRID_ALLOCATION = 1
)

// Enum value maps for RegisterEegRequest_GRID_ALLOCATION.
var (
	RegisterEegRequest_GRID_ALLOCATION_name = map[int32]string{
		0: "DYNAMIC",
		1: "STATIC",
	}
	RegisterEegRequest_GRID_ALLOCATION_value = map[string]int32{
		"DYNAMIC": 0,
		"STATIC":  1,
	}
)

func (x RegisterEegRequest_GRID_ALLOCATION) Enum() *RegisterEegRequest_GRID_ALLOCATION {
	p := new(RegisterEegRequest_GRID_ALLOCATION)
	*p = x
	return p
}

func (x RegisterEegRequest_GRID_ALLOCATION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterEegRequest_GRID_ALLOCATION) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_register_proto_enumTypes[3].Descriptor()
}

func (RegisterEegRequest_GRID_ALLOCATION) Type() protoreflect.EnumType {
	return &file_proto_register_proto_enumTypes[3]
}

func (x RegisterEegRequest_GRID_ALLOCATION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterEegRequest_GRID_ALLOCATION.Descriptor instead.
func (RegisterEegRequest_GRID_ALLOCATION) EnumDescriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{2, 3}
}

type EegRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RcNumber string `protobuf:"bytes,1,opt,name=rcNumber,proto3" json:"rcNumber,omitempty"`
}

func (x *EegRequest) Reset() {
	*x = EegRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_register_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EegRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EegRequest) ProtoMessage() {}

func (x *EegRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_register_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EegRequest.ProtoReflect.Descriptor instead.
func (*EegRequest) Descriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{0}
}

func (x *EegRequest) GetRcNumber() string {
	if x != nil {
		return x.RcNumber
	}
	return ""
}

type EegResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *EegResponse) Reset() {
	*x = EegResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_register_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EegResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EegResponse) ProtoMessage() {}

func (x *EegResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_register_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EegResponse.ProtoReflect.Descriptor instead.
func (*EegResponse) Descriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{1}
}

func (x *EegResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// The request message containing the user's name.
type RegisterEegRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RcNumber           string                             `protobuf:"bytes,1,opt,name=rcNumber,proto3" json:"rcNumber,omitempty"`
	CommunityId        string                             `protobuf:"bytes,2,opt,name=communityId,proto3" json:"communityId,omitempty"`
	Name               string                             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string                             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Iban               string                             `protobuf:"bytes,5,opt,name=iban,proto3" json:"iban,omitempty"`
	Owner              string                             `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	Sepa               bool                               `protobuf:"varint,7,opt,name=sepa,proto3" json:"sepa,omitempty"`
	Legal              RegisterEegRequest_EEG_LEGAL       `protobuf:"varint,8,opt,name=legal,proto3,enum=at.ourproject.RegisterEegRequest_EEG_LEGAL" json:"legal,omitempty"`
	BusinessNr         string                             `protobuf:"bytes,9,opt,name=businessNr,proto3" json:"businessNr,omitempty"`
	TaxNumber          string                             `protobuf:"bytes,10,opt,name=taxNumber,proto3" json:"taxNumber,omitempty"`
	VatNumber          string                             `protobuf:"bytes,11,opt,name=vatNumber,proto3" json:"vatNumber,omitempty"`
	SettelmentInterval RegisterEegRequest_EEG_SETTELMENT  `protobuf:"varint,12,opt,name=settelmentInterval,proto3,enum=at.ourproject.RegisterEegRequest_EEG_SETTELMENT" json:"settelmentInterval,omitempty"`
	GridId             string                             `protobuf:"bytes,13,opt,name=gridId,proto3" json:"gridId,omitempty"`
	GridName           string                             `protobuf:"bytes,14,opt,name=gridName,proto3" json:"gridName,omitempty"`
	Area               RegisterEegRequest_GRID_AREA       `protobuf:"varint,15,opt,name=area,proto3,enum=at.ourproject.RegisterEegRequest_GRID_AREA" json:"area,omitempty"`
	Allocation         RegisterEegRequest_GRID_ALLOCATION `protobuf:"varint,16,opt,name=allocation,proto3,enum=at.ourproject.RegisterEegRequest_GRID_ALLOCATION" json:"allocation,omitempty"`
	EegOwner           string                             `protobuf:"bytes,17,opt,name=eegOwner,proto3" json:"eegOwner,omitempty"`
	Street             string                             `protobuf:"bytes,18,opt,name=street,proto3" json:"street,omitempty"`
	StreetNumber       string                             `protobuf:"bytes,19,opt,name=streetNumber,proto3" json:"streetNumber,omitempty"`
	City               string                             `protobuf:"bytes,20,opt,name=city,proto3" json:"city,omitempty"`
	Zip                string                             `protobuf:"bytes,21,opt,name=zip,proto3" json:"zip,omitempty"`
	Email              string                             `protobuf:"bytes,22,opt,name=email,proto3" json:"email,omitempty"`
	Web                *string                            `protobuf:"bytes,23,opt,name=web,proto3,oneof" json:"web,omitempty"`
	Phone              *string                            `protobuf:"bytes,24,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	Online             bool                               `protobuf:"varint,25,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *RegisterEegRequest) Reset() {
	*x = RegisterEegRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_register_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterEegRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEegRequest) ProtoMessage() {}

func (x *RegisterEegRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_register_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEegRequest.ProtoReflect.Descriptor instead.
func (*RegisterEegRequest) Descriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterEegRequest) GetRcNumber() string {
	if x != nil {
		return x.RcNumber
	}
	return ""
}

func (x *RegisterEegRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *RegisterEegRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterEegRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegisterEegRequest) GetIban() string {
	if x != nil {
		return x.Iban
	}
	return ""
}

func (x *RegisterEegRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RegisterEegRequest) GetSepa() bool {
	if x != nil {
		return x.Sepa
	}
	return false
}

func (x *RegisterEegRequest) GetLegal() RegisterEegRequest_EEG_LEGAL {
	if x != nil {
		return x.Legal
	}
	return RegisterEegRequest_VEREIN
}

func (x *RegisterEegRequest) GetBusinessNr() string {
	if x != nil {
		return x.BusinessNr
	}
	return ""
}

func (x *RegisterEegRequest) GetTaxNumber() string {
	if x != nil {
		return x.TaxNumber
	}
	return ""
}

func (x *RegisterEegRequest) GetVatNumber() string {
	if x != nil {
		return x.VatNumber
	}
	return ""
}

func (x *RegisterEegRequest) GetSettelmentInterval() RegisterEegRequest_EEG_SETTELMENT {
	if x != nil {
		return x.SettelmentInterval
	}
	return RegisterEegRequest_ANNUAL
}

func (x *RegisterEegRequest) GetGridId() string {
	if x != nil {
		return x.GridId
	}
	return ""
}

func (x *RegisterEegRequest) GetGridName() string {
	if x != nil {
		return x.GridName
	}
	return ""
}

func (x *RegisterEegRequest) GetArea() RegisterEegRequest_GRID_AREA {
	if x != nil {
		return x.Area
	}
	return RegisterEegRequest_REGIONAL
}

func (x *RegisterEegRequest) GetAllocation() RegisterEegRequest_GRID_ALLOCATION {
	if x != nil {
		return x.Allocation
	}
	return RegisterEegRequest_DYNAMIC
}

func (x *RegisterEegRequest) GetEegOwner() string {
	if x != nil {
		return x.EegOwner
	}
	return ""
}

func (x *RegisterEegRequest) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *RegisterEegRequest) GetStreetNumber() string {
	if x != nil {
		return x.StreetNumber
	}
	return ""
}

func (x *RegisterEegRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *RegisterEegRequest) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *RegisterEegRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterEegRequest) GetWeb() string {
	if x != nil && x.Web != nil {
		return *x.Web
	}
	return ""
}

func (x *RegisterEegRequest) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *RegisterEegRequest) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

// The response message containing the greetings
type RegisteredEegReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status uint32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RegisteredEegReply) Reset() {
	*x = RegisteredEegReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_register_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredEegReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredEegReply) ProtoMessage() {}

func (x *RegisteredEegReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_register_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredEegReply.ProtoReflect.Descriptor instead.
func (*RegisteredEegReply) Descriptor() ([]byte, []int) {
	return file_proto_register_proto_rawDescGZIP(), []int{3}
}

func (x *RegisteredEegReply) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_proto_register_proto protoreflect.FileDescriptor

var file_proto_register_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x28, 0x0a, 0x0a, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x25, 0x0a, 0x0b, 0x45, 0x65, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0xd6, 0x08, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x62, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x62, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x65, 0x70, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x65, 0x70, 0x61, 0x12,
	0x41, 0x0a, 0x05, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x45, 0x47, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x52, 0x05, 0x6c, 0x65, 0x67,
	0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4e, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x60,
	0x0a, 0x12, 0x73, 0x65, 0x74, 0x74, 0x65, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x74, 0x2e,
	0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x45,
	0x47, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x45, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x52, 0x12, 0x73, 0x65,
	0x74, 0x74, 0x65, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x72, 0x69, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x69, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x69, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x65, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x52, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x51, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x74, 0x2e, 0x6f,
	0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x52, 0x49,
	0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x0a, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x65, 0x67, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x65, 0x67, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x0a, 0x03,
	0x77, 0x65, 0x62, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x77, 0x65, 0x62,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x3d, 0x0a, 0x09, 0x45, 0x45, 0x47, 0x5f, 0x4c, 0x45,
	0x47, 0x41, 0x4c, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x45, 0x52, 0x45, 0x49, 0x4e, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x47, 0x45, 0x4e, 0x4f, 0x53, 0x53, 0x45, 0x4e, 0x53, 0x43, 0x48, 0x41, 0x46,
	0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x53, 0x45, 0x4c, 0x4c, 0x53, 0x43, 0x48,
	0x41, 0x46, 0x54, 0x10, 0x02, 0x22, 0x44, 0x0a, 0x0e, 0x45, 0x45, 0x47, 0x5f, 0x53, 0x45, 0x54,
	0x54, 0x45, 0x4c, 0x4d, 0x45, 0x4e, 0x54, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4e, 0x4e, 0x55, 0x41,
	0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x41, 0x4e, 0x4e, 0x55, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x51, 0x55, 0x41, 0x52, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x03, 0x22, 0x24, 0x0a, 0x09, 0x47,
	0x52, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x47, 0x49,
	0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10,
	0x01, 0x22, 0x2a, 0x0a, 0x0f, 0x47, 0x52, 0x49, 0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x77, 0x65, 0x62, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22,
	0x2c, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x65, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xae, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x65, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x65,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x65, 0x65, 0x67, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x45, 0x65, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x45, 0x65, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4f,
	0x0a, 0x16, 0x61, 0x74, 0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x65, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21, 0x61, 0x74,
	0x2e, 0x6f, 0x75, 0x72, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x66, 0x65, 0x65,
	0x67, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_register_proto_rawDescOnce sync.Once
	file_proto_register_proto_rawDescData = file_proto_register_proto_rawDesc
)

func file_proto_register_proto_rawDescGZIP() []byte {
	file_proto_register_proto_rawDescOnce.Do(func() {
		file_proto_register_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_register_proto_rawDescData)
	})
	return file_proto_register_proto_rawDescData
}

var file_proto_register_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_register_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_register_proto_goTypes = []interface{}{
	(RegisterEegRequest_EEG_LEGAL)(0),       // 0: at.ourproject.RegisterEegRequest.EEG_LEGAL
	(RegisterEegRequest_EEG_SETTELMENT)(0),  // 1: at.ourproject.RegisterEegRequest.EEG_SETTELMENT
	(RegisterEegRequest_GRID_AREA)(0),       // 2: at.ourproject.RegisterEegRequest.GRID_AREA
	(RegisterEegRequest_GRID_ALLOCATION)(0), // 3: at.ourproject.RegisterEegRequest.GRID_ALLOCATION
	(*EegRequest)(nil),                      // 4: at.ourproject.EegRequest
	(*EegResponse)(nil),                     // 5: at.ourproject.EegResponse
	(*RegisterEegRequest)(nil),              // 6: at.ourproject.RegisterEegRequest
	(*RegisteredEegReply)(nil),              // 7: at.ourproject.RegisteredEegReply
}
var file_proto_register_proto_depIdxs = []int32{
	0, // 0: at.ourproject.RegisterEegRequest.legal:type_name -> at.ourproject.RegisterEegRequest.EEG_LEGAL
	1, // 1: at.ourproject.RegisterEegRequest.settelmentInterval:type_name -> at.ourproject.RegisterEegRequest.EEG_SETTELMENT
	2, // 2: at.ourproject.RegisterEegRequest.area:type_name -> at.ourproject.RegisterEegRequest.GRID_AREA
	3, // 3: at.ourproject.RegisterEegRequest.allocation:type_name -> at.ourproject.RegisterEegRequest.GRID_ALLOCATION
	6, // 4: at.ourproject.RegisterEegService.register:input_type -> at.ourproject.RegisterEegRequest
	4, // 5: at.ourproject.RegisterEegService.eegExists:input_type -> at.ourproject.EegRequest
	7, // 6: at.ourproject.RegisterEegService.register:output_type -> at.ourproject.RegisteredEegReply
	5, // 7: at.ourproject.RegisterEegService.eegExists:output_type -> at.ourproject.EegResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_register_proto_init() }
func file_proto_register_proto_init() {
	if File_proto_register_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_register_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EegRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_register_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EegResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_register_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterEegRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_register_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisteredEegReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_register_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_register_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_register_proto_goTypes,
		DependencyIndexes: file_proto_register_proto_depIdxs,
		EnumInfos:         file_proto_register_proto_enumTypes,
		MessageInfos:      file_proto_register_proto_msgTypes,
	}.Build()
	File_proto_register_proto = out.File
	file_proto_register_proto_rawDesc = nil
	file_proto_register_proto_goTypes = nil
	file_proto_register_proto_depIdxs = nil
}
